# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ "main"]
  pull_request:

# Permissions per job (least privilege)
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write     # push to GHCR
    outputs:
      image_ref: ${{ steps.out.outputs.image_ref }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute IMAGE_REF (GHCR)
        id: out
        shell: bash
        run: |
          set -euo pipefail
          # ghcr requires lowercase path
          OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${GITHUB_REPOSITORY#*/}" | tr '[:upper:]' '[:lower:]')
          TAG="sha-${GITHUB_SHA::7}"
          echo "IMAGE_REF=ghcr.io/${OWNER}/${REPO}:${TAG}" >> "$GITHUB_ENV"
          echo "image_ref=ghcr.io/${OWNER}/${REPO}:${TAG}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push (cached)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_REF }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-e2e:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read      # pull from GHCR
    env:
      IMAGE_REF: ${{ needs.build.outputs.image_ref }}
      COMPOSE_PROJECT_NAME: e2e-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull CI image & tag for compose
        run: |
          set -euo pipefail
          docker pull "$IMAGE_REF"
          # If your compose references 'app:build', retag to satisfy it:
          docker tag "$IMAGE_REF" app:build

      - name: End-to-end test (compose with health)
        shell: bash
        run: |
          set -euo pipefail
          docker compose up -d --quiet-pull --wait --wait-timeout 120
          curl -fsS http://localhost:5000/health

      - name: Dump logs on failure
        if: failure()
        run: |
          docker compose ps
          docker compose logs --no-color --timestamps

      - name: Teardown
        if: always()
        run: docker compose down -v --remove-orphans

  publish:
    needs: test-e2e
    if: ${{ success() && github.event_name == 'push' }}
    # Call your reusable workflow (see section B below)
    permissions:
      contents: write      # for optional VERSION commit
      id-token: write      # for AWS OIDC (if you use it)
      packages: read       # to pull from GHCR inside the callee
      actions: read
    uses: ./.github/workflows/publish-public-ecr-version-bump.yaml
    with:
      public_registry_alias: ${{ vars.PUBLIC_REGISTRY_ALIAS }}
      public_ecr_repo: ${{ vars.PUBLIC_ECR_REPO }}
      image_local_name: app:build
      image_pull_ref: ${{ needs.build.outputs.image_ref }}   # <â€” NEW: tell callee to pull & retag
      bump_version: true
      commit_bump: true
      bump_ref: refs/heads/main
      # aws_role_to_assume: arn:aws:iam::<ACCOUNT_ID>:role/GitHubActions-ECR-Public  # if using OIDC
    secrets: inherit
