name: Test and Build

on:
    push:
        branches: 
            - main
env:
  PUBLIC_REGISTRY_ALIAS: u9j9o0m9
  PUBLIC_ECR_REPO: entry-tracker
            
jobs:
    Test-Build-e2e:
        runs-on: self-hosted

        steps: 
            - name: Checkout Code
              uses: actions/checkout@v4
            


            - uses: actions/setup-python@v5
              with:
                python-version: "3.12"
                cache: "pip"

            - name: Create venv & install deps
              shell: bash
              run: |
                    set -euo pipefail
                    python -m venv .venv
                    source .venv/bin/activate
                    python -m pip install --upgrade pip
                    if [[ -f requirements.txt ]]; then pip install -r requirements.txt; fi
                    pip install -U pytest pytest-cov
                    echo "$PWD/.venv/bin" >> "$GITHUB_PATH"
                    python -c "import sys; print('Python:', sys.executable)"
                    pytest --version


            - name: unit test app
              run: | 
                set -euo pipefail
                pytest -q


            - name: End-to-end test (compose)
              shell: bash
              run: |
                set -euo pipefail
                docker compose up -d --quiet-pull

                # Wait for the app to respond (retry up to ~2 minutes)
                for i in {1..60}; do
                if curl -fsS --max-time 2 http://localhost:5000 >/dev/null; then
                    echo "App is healthy ✅"
                    break
                fi
                echo "Waiting for app… ($i/60)"
                sleep 2
                done

                # Final check (fails the step if not healthy)
                curl -fsS http://localhost:5000

            - name: Dump logs on failure
              if: failure()
              run: |
                docker compose ps
                docker compose logs --no-color --timestamps

            - name: Teardown stack
              if: always()
              run: | 
               docker compose down -v --remove-orphans
               rm -rf .venv

            # - name: Publish
            #   if: github.event_name == 'push'   # only on branch pushes
            #   uses: ./.github/workflows/publish-public-ecr-version-bump.yaml
            #   with:
            #     public_registry_alias: ${{ env.PUBLIC_REGISTRY_ALIAS }}
            #     public_ecr_repo: ${{ env.PUBLIC_ECR_REPO }}
            #     image_local_name: "app:build"
            #     bump_version: true
            #     commit_bump: true
            #     bump_ref: "refs/heads/main"
            #     push_latest: true
            #     push_sha: true
            #     aws_role_to_assume: # No need since runner has correct role
    publish:
        needs: Test-Build-e2e
        if: ${{ success() }}
        runs-on: self-hosted
        steps:
            - name: publish
              uses: ./.github/workflows/publish-public-ecr-version-bump.yaml  
              with:
                public_registry_alias: your-alias
                public_ecr_repo: entry-tracker
                secrets: inherit   # or map specific secrets